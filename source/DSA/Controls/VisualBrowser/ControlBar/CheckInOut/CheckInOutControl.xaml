<UserControl
    x:Class="DSA.Shell.Controls.VisualBrowser.ControlBar.CheckInOut.CheckInOutControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converters="using:DSA.Shell.Converters"
    xmlns:checkInOut="using:DSA.Shell.Controls.VisualBrowser.ControlBar.CheckInOut"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../../Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ControlTemplate x:Key="SegmentedControl" TargetType="CheckBox">
                <Border Background="{StaticResource SegmentedControlColor2}"
                            BorderBrush="{StaticResource SegmentedControlColor1}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="PointerOver"/>
                            <VisualState x:Name="Pressed"/>
                            <VisualState x:Name="Disabled"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="MainGrid">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedControlColor1}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedControlColor2}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unchecked" />
                            <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused"/>
                            <VisualState x:Name="Unfocused" />
                            <VisualState x:Name="PointerFocused" />
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid x:Name="MainGrid">
                        <ContentPresenter x:Name="ContentPresenter"
                                      Foreground="{StaticResource SegmentedControlColor1}"
                                      Content="{TemplateBinding Content}"
                                      ContentTransitions="{TemplateBinding ContentTransitions}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      AutomationProperties.AccessibilityView="Raw" />
                    </Grid>
                </Border>
            </ControlTemplate>
            <converters:BooleanToVisibilityConverter x:Name="BoolToVis" />
            <converters:BooleanToVisibilityConverter x:Name="BoolToVisRev" IsReversed="True" />
            <converters:EnumBooleanConverter x:Name="EnumToBool" />

            <Style x:Key="ChooseAtcheckOutButtonStyle" TargetType="Button">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="{StaticResource ChooseAtCheckOutForgroundColor}"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Center" />



                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverBackgroundThemeBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="FocusVisualWhite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                                <DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="PointerFocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="3">
                                    <ContentPresenter x:Name="ContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              AutomationProperties.AccessibilityView="Raw"/>
                                </Border>
                                <Rectangle x:Name="FocusVisualWhite"
                                   IsHitTestVisible="False"
                                   Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
                                   StrokeEndLineCap="Square"
                                   StrokeDashArray="1,1"
                                   Opacity="0"
                                   StrokeDashOffset="1.5" />
                                <Rectangle x:Name="FocusVisualBlack"
                                   IsHitTestVisible="False"
                                   Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
                                   StrokeEndLineCap="Square"
                                   StrokeDashArray="1,1"
                                   Opacity="0"
                                   StrokeDashOffset="0.5" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="White" >
        <Grid Visibility="{Binding IsContactsListVisible, Converter={StaticResource BoolToVis}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition/>
                <RowDefinition Height="45"  />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="{StaticResource PageBackgroundBrush}">
                <Button Content="Cancel" Visibility="{Binding IsChooseAtCheckOutFlow, Converter={StaticResource BoolToVisRev}}" BorderThickness="0" Command="{Binding CancelCommand}" Foreground="White" Background="Transparent" />
                <Button Content="Review Materials" Visibility="{Binding IsChooseAtCheckOutFlow, Converter={StaticResource BoolToVis}}" BorderThickness="0" Command="{Binding GoToContentReviewCommand}" Foreground="White" Background="Transparent" />
                <TextBlock Text="Select Contact" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" Foreground="White" FontSize="18" />
            </Grid>
            <Grid Grid.Row="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Margin="10,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" 
                                         IsChecked="{Binding Path=ContactTypeFilter, Converter={StaticResource EnumToBool}, ConverterParameter=All, Mode=TwoWay}" 
                                         Content="All" 
                                         VerticalAlignment="Stretch" 
                                         HorizontalAlignment="Stretch" 
                                         Template="{StaticResource SegmentedControl}" 
                                         BorderThickness="1,1,1,1"/>
                            <CheckBox  Grid.Column="1" 
                                         IsChecked="{Binding Path=ContactTypeFilter, Converter={StaticResource EnumToBool}, ConverterParameter=Recent, Mode=TwoWay}" 
                                         Content="Recent" 
                                         VerticalAlignment="Stretch" 
                                         Template="{StaticResource SegmentedControl}" 
                                         HorizontalAlignment="Stretch"  
                                         BorderThickness="1,1,1,1"/>
                        </Grid>
                        <Grid Grid.Row="1" Margin="10,0" >
                            <TextBox Text="{Binding Query, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PlaceholderText="Search" Margin="0,0,0,10"/>
                        </Grid>
                    </Grid>
                    <ListBox Grid.Row="1" x:Name="contactsList" ItemsSource="{Binding Contacts}"  BorderThickness="0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="{Binding DisplayName}"/>
                                    <TextBlock Grid.Row="1" Text="{Binding Description}"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                <core:InvokeCommandAction Command="{Binding SelectContactCommand}" CommandParameter="{Binding SelectedItem, ElementName=contactsList}"/>
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </ListBox>
                </Grid>
            </Grid>
            <Grid Grid.Row="2">
                <Button Visibility="{Binding IsChooseAtCheckOutVisible, Converter={StaticResource BoolToVis}}" 
                        Content="Choose at Check Out"
                        Command="{Binding ChooseAtCheckOutCommand}"
                        Style="{StaticResource ChooseAtcheckOutButtonStyle}"/>
            </Grid>
        </Grid>
        <Grid Visibility="{Binding IsContactsListVisible, Converter={StaticResource BoolToVisRev}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="{StaticResource PageBackgroundBrush}">
                <Button Content="Cancel" Command="{Binding CancelCommand}" BorderThickness="0" Foreground="White" Background="Transparent" />
                <TextBlock Text="Review Materials" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" Foreground="White" FontSize="18" />
                <Button Content="Done" Visibility="{Binding IsChooseAtCheckOutFlow, Converter={StaticResource BoolToVisRev}}" Command="{Binding FinishCheckOutCommand}" HorizontalAlignment="Right" BorderThickness="0" Foreground="White" Background="Transparent" />
                <Button Content="Choose Contact" Visibility="{Binding IsChooseAtCheckOutFlow, Converter={StaticResource BoolToVis}}" Command="{Binding GoToChooseContactCommand}"  HorizontalAlignment="Right" BorderThickness="0" Foreground="White" Background="Transparent" />
            </Grid>
            <Grid Grid.Row="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="160"/>
                        <RowDefinition Height="490"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="10,5">
                        <TextBox  Header="Notes"
                                  Text="{Binding Notes, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  TextWrapping="Wrap"
                                  AcceptsReturn="True" 
                                  Width="570"/>
                    </Grid>
                    <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding ContentsReviews}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <checkInOut:ContentReviewControl />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
